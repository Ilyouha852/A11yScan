Детальная проверка на соответствие WCAG AA

В данном разделе приведена выжимка из WCAG в форме чек-листа на соответствие уровню AA, сгруппированный по соответствующим критериям WCAG. Список составлен на основе http://webaim.org/standards/wcag/checklist. Официальный набор рекомендаций, техник и список часто встречающихся ошибок можно найти по ссылке: https://www.w3.org/WAI/WCAG20/quickref/.


Всем участникам разработки и тестирования сайта рекомендуется внимательно изучить и освоить данный список, чтобы допускать как можно меньше ошибок на этапе разработки или исправлять их на ранних этапах. Это позволит обходиться наименьшими трудозатратами при разработке и тестировании, а также сосредоточиться при тестировании на деталях, которые важны, но могут быть упущены в общем количестве ошибок.


1.1. Текстовая версия: предоставьте текстовую версию любого нетекстового контента


1.1.1. Нетекстовый контент (Level A)


Все изображения, кнопки изображения (form image buttons), и области image map имеют соответствующий эквивалентный альтернативный текст.
Изображения, которые не представляют какого-либо содержимого, являются декоративными или содержание которых уже представлено текстом, имеют пустой атрибут alt="" или выполнены в виде фоновых изображений CSS.
Все изображения-ссылки имеют альтернативный текст (aria-label у ссылки или alt у изображения).
Для сложных изображений на той же или отдельной странице имеется развернутый текстовый аналог. Изображение может быть связано с текстом с помощью ссылки или атрибута longdesc.
Все кнопки имеют осмысленный текст.
Все поля ввода имеют осмысленные текстовые метки.
Встроенные медиа-объекты должны быть озаглавлены или иным образом идентифицированы текстом, доступным для программ экранного доступа.
Встроенные фреймы имеют осмысленные названия.

1.2. Медиаконтент: предоставьте альтернативную версию медиаконтента, ограниченного по времени


Вкратце, следует предоставлять расшифровку текста записи, текстовое описание её содержимого или субтитры. Если видео содержит визуальную информацию, которая не представлена звуком, следует также предоставить для него аудио-описание.


В случае, если такое содержимое появится на сайте, следует обратиться к стандарту WCAG или, например, рекомендациям Webaim.


1.3. Адаптируемость: создавайте контент, который можно представить в различных видах без потери данных или структуры


1.3.1. Информация и связность (Level A)


Семантически значимые элементы использованы по предназначению в соответствии со спецификацией HTML.
Для обозначения заголовков (<h1>), списков (<ul>, <ol>, and <dl>), специального или выделенного текста (например, <strong>, <code>, <abbr>, <blockquote>) и прочих значимых элементов использована семантическая вёрстка.
Для табличных данных используются таблицы. Ячейки корректно связаны со своими заголовками по горизонтали и/или вертикали. Если содержимое таблицы требует пояснения, использованы теги <caption> и <summary>.
Связанные поля формы сгруппированы в <fieldset>, содержащий осмысленный <legend>.

1.3.2. Значимая последовательность чтения (Level A)


Порядок чтения и навигации по странице, определяемый порядком элементов в HTML-коде, интуитивен и логически обоснован, не искажает сути содержимого.

1.3.3. Сенсорные характеристики (Level A)


Если это не является неотъемлемой и неминуемой частью функционала:


В тексте отсутствуют отсылки к форме, размерам и расположению элементов, указания по пользованию страницей не завязаны на этих характеристиках (например, "Нажмите на квадратную иконку", "Инструкцию можно найти в правой колонке" и т.д.).
Использование страницы не завязано на звуке (например, "Продолжите после звукового сигнала").

1.4. Избирательность: упростите просмотр и прослушивание контента, отделив важные части от второстепенных


1.4.1. Использование цвета (Level A)


Цвет не используется в качестве единственного средства предоставления контента, индикации или различия элементов.
Цвет не используется как единственное средство обозначения ссылок на фоне остального текста, за исключением случая, когда контраст по яркости между цветами текста и ссылок не менее 3:1, и при навигации или фокусе ссылка получает дополнительные различия (например, подчеркивание).

1.4.2. Управление звуком (Level A)


Если на странице присутствует звук, который автоматически проигрывается более 3 секунд, необходимо дать возможность его остановить, поставить на паузу, заглушить или настроить его громкость.

1.4.3. Контраст (Level AA)


Текст и текст на изображениях должны иметь коэффициент контрастности не менее 4,5:1.
Увеличенный текст и изображение увеличенного текста имеют коэффициент контрастности не менее 3:1.

1.4.4. Изменение размеров текста (Level AA)


Желательно, чтобы страница оставалась читаемой и функциональной при увеличении масштаба в пределах до 200%. Особенно это актуально для блоков, содержащих мелкий и низкоконтрастный текст.

1.4.5. Текст на изображениях (Level AA)


Если можно добиться такого же визуального представления посредством доступного текста, и если содержание текста в изображении не имеет ключевого значения (логотип, скриншот и т.п.), то не следует использовать изображения, содержащие текст.

2.1. Доступность управления с клавиатуры


2.1.1. Клавиатура (Level A)


Весь функционал должен быть доступен для управления с клавиатуры, за исключением случаев, когда это в принципе невозможно (например, рисование от руки).


Необходимо убедиться в работоспособности как в сочетании с экранными чтецами, так и без.


Все элементы, с которыми можно взаимодействовать, должны принимать фокус. В случае, если реализовано нажатие на элемент, оно должно быть доступно наравне как посредством мыши, так и посредством клавиатуры.


По умолчанию, фокусировку и взаимодействие с клавиатурой поддерживают элементы формы, кнопки <button> и ссылки <a href>.


Собственные реализации элементов управления или ввода должны предоставлять те же возможности для взаимодействия посредством клавиатуры, что и встроенные в браузер элементы и/или примеры реализации похожих виджетов на специализированных сайтах по доступности (например, Open Ajax Accessibility).


Нужно помнить, что реализации виджетов на этих сайтах может быть не идеальной, и во многих случаях может потребоваться их доработка или исправление. Необходимо проверять сложные решения в экранных чтецах.


Рекомендуется избегать использования атрибута accesskey без необходимости. Атрибут accesskey нужно применять с осторожностью: он не должен конфликтовать с популярными горячими клавишами экранных чтецов (JAWS, NVDA). На русской версии рекомендуется выбирать accesskey таким, чтобы символ располагался на одной и той же кнопке в русской и английской раскладке.
Задание положительного tabindex может вызвать проблемы с порядком переключения фокуса.
Использование обработчиков mousedown и mouseup в качестве обработчиков нажатия на элемент будет приводить к недоступности его с клавиатуры. Также не обеспечивает доступность событие click на не фокусируемых по-умолчанию элементах, т.е. всех, кроме элементов формы, кнопок <button> и ссылок <a href>.


Рекомендуется избегать таких случаев, но если это невозможно, то для таких элементов необходимо дополнительно прописывать обработку событий клавиатуры.


Открывающиеся при наведении мыши подсказки или меню также должны быть доступны с клавиатуры. Можно, например, показывать (а для подсказок ещё и озвучивать) текст элемента при фокусе.


Спецификация ARIA предусматривает атрибут aria-haspopup для реализации подобных виджетов (например), но с его поддержкой и работой с клавиатуры без экранных чтецов есть вопросы.


Экранные чтецы могут переопределять обработку нажатия некоторых клавиш (например, стрелок клавиатуры или букв в режиме чтения — без фокуса на элементах формы), поэтому к обработке нажатия клавиш вне полей формы нужно относиться с осторожностью, изначально продумывать и впоследствии тестировать их поведение в сочетании с экранными чтецами; переопределение обработки нажатия TAB также может вызвать проблемы с порядком переключения фокуса.

2.1.2. Отсутствие ловушек для фокуса (Level A)


Фокус при попадании на любой элемент или группу элементов никогда не застревает в них, и может быть свободно перемещён на любой доступный для управления элемент на странице.

2.2. Достаточное время: предоставьте пользователям достаточно времени для ознакомления и работы с контентом


2.2.1. Настройка времени (Level A)


Если страница или приложения имеют временные ограничения, то у пользователя должна быть возможность его выключить, настроить, продлить.
Исключения, предусмотренные стандартом:


работающие в реальном времени приложения;
случаи, когда ограничения по времени имеют ключевое значение и не могут быть убраны без ущерба для функционала, информационной значимости страницы или безопасности;
ограничения по времени более 20 часов.


2.2.2. Пауза, остановка, скрытие. (Level A)


Пользователь должен иметь возможность остановить, поставить на паузу или скрыть длящиеся более 5 секунд движения, мерцания или перемотку любых элементов. Это не относится к индикаторам загрузки.
Для анимации переходов и привлечения внимания пользователей можно использовать движение, мерцание или перемотку длительностью менее 5 секунд.
Также должна иметься возможность поставить на паузу автоматическое обновление любого содержания, за исключением случаев, когда обновление имеет ключевое значение, и без него страница теряет смысл.

Стандарт предусматривает исключения из правил, если отсутствует техническая возможность или если анимация или обновление имеют ключевое значение для функционала страницы, и без них меняется смысл или поведение страницы. Примеры исключений с объяснением можно найти в пояснениях к критерию.


Критерий довольно строгий, и полное следование ему иногда может потребовать много времени на разработку и ухудшить пользование страницей для обычных пользователей. Нужно искать компромисс между строгими формальными требованиями стандарта и реальностью в каждом случае, но при этом нужно продумывать взаимодействие для каждой из перечисленных категорий пользователей (см. Введение).


2.3. Не используйте заведомо опасные для здоровья элементы дизайна


2.3.1. Ограничение в три или менее вспышки в секунду (Level A)


На странице не должно быть элементов, которые вспыхивают более 3 раз в секунду. Подробное описание понятий вспышки и допустимых значений можно найти в стандарте https://www.w3.org/Translations/WCAG20-ru/#general-thresholddef.

2.4. Навигация: предоставьте пользователям помощь и поддержку в навигации, поиске контента и в определении их текущего положения на сайте


2.4.1. Пропуск повторяющихся на всех страницах блоков (Level A)


Имеется ссылка для пропуска повторяющихся блоков.
Имеется корректная иерархия заголовков начиная с уровня 1.

2.4.2. Заголовок страницы (Level A)


Страница имеет информативный заголовок <title>, описывающий её предназначение и цели.
При навигации по сайту без перезагрузки страницы также следует изменять содержимое <title>.

2.4.3. Порядок перемещения фокуса (Level A)


Порядок навигации по ссылкам, элементам формы и др. объектам интуитивно понятен и логически обоснован.

2.4.4. Предназначение ссылки (в контексте) (Level A)


Предназначение каждой ссылки (или другого активного элемента) ясно из самого текста ссылки, либо из текста ссылки в сочетании с ее программно вычисляемым контекстом.
Ссылки с одинаковым текстом, ведущие в разные места, легко различимы между собой.

2.4.5. Различные способы поиска (Level AA)


Пользователю доступно более одного способа поиска нужной веб-страницы: список связанных страниц, оглавление, карта сайта, поиск, список всех страниц сайта и т.д.

2.4.6. Заголовки и метки (Level AA)


Заголовки и метки (<label>, <legend>, aria-label) должны быть информативны и чётко описывать ту часть страницы или тот элемент, к которому они относятся.
Желательно избегать повторяющихся заголовков и меток, если только структура страницы не предоставляет очевидного способа их различения.

2.4.7. Видимый фокус (Level AA)


Элемент с фокусом должен быть чётко различим.

3.1. Удобочитаемость: сделайте весь текстовый контент удобочитаемым и понятным


3.1.1. Язык страницы (Level A)


Язык страницы необходимо указывать с помощью атрибута <html lang>.

3.1.2. Язык частей страницы (Level AA)


Для элементов, язык которых отличается от языка страницы, его также необходимо указывать с помощью атрибута lang.

3.2. Предсказуемость отображения и функционала


3.2.1. Предсказуемость при фокусе (Level A)


Попадание фокуса на какой-либо элемент не должно вызывать значимых изменений на странице (смены контекста):


переход на другую страницу;
открытие всплывающего окна;
потеря или непредсказуемое повторное изменение фокуса;
непредсказуемая перемотка страницы;
другие изменения, которые могут запутать или сбить с толку пользователя.

Такие вещи, как развертка списка, показ динамического меню или переключение табуляторного элемента управления, допустимы. Подробнее см. стандарт WCAG 2.0.

3.2.2. Предсказуемость при вводе (Level A)


Ввод информации или взаимодействие с каким-либо полем или элементом управления не должен вызывать значимых изменений на странице (смены контекста), если пользователь не был проинформирован об этом заранее.


Примеры смены контекста можно найти выше в п. 3.2.1.


Наиболее распространенный случай — переход на другую страницу или открытие нового окна по событию onchange на элементах <select>, радиокнопках или чекбоксах. Следует по возможности избегать такого поведения, переходить на страницу только по нажатию на кнопку или на ENTER [G80][g80].


При тестировании следует учесть, что событие onchange в разных браузерах срабатывает по-разному.



3.2.3. Единообразная навигация (Level AA)


Навигационные элементы, представленные на нескольких страницах сайта, при навигации по сайту не должны менять порядок и расположение.

3.2.4. Единообразие названий (Level AA)


Элементы со схожей функциональностью на разных страницах должны быть подписаны схожим образом.

3.3. Помощь при вводе: помогайте пользователям избегать ошибок при вводе информации и исправлять их


3.3.1. Выявление ошибок (Level A)


Обязательные поля размечены соответствующим образом для зрячих и незрячих: упоминание об обязательности поля в <label>, атрибут aria-required на поле ввода.
Ошибки формы дожны быть представлены в интуитивном и доступном виде.


В большинстве случаев рекомендуется следующий подход: у элемента с ошибкой должен быть id, по которому на него поле ссылается с помощью атрибута aria-describedby.


Атрибут aria-describedby меняется динамически: в обычном состоянии он указывает на подсказку или описание поля, а в случае ошибки ввода — на текст ошибки (вместо или вместе с подсказкой — aria-describedby может содержать несколько идентификаторов).


Желательно предоставить общее сообщение об ошибке в начале страницы. Плюсом будет также возможность перехода из сообщения по ссылке к первому полю с ошибкой.


Во всех деталях данная техника описана в статье от WebAIM.


Чтобы немедленно зачитать ошибку пользователю в некоторых случаях можно использовать уведомление с помощью role="alert" или aria-live [ARIA21][aria19].

3.3.2. Текстовые метки и инструкции для полей ввода (Level A)


Имеются информативные и правильно связанные метки (<label>, aria-label, aria-labelledby), подсказки и инструкции (aria-describedby), примеры заполнения полей, заголовки группировок полей (<legend>).


Подсказки и инструкции к полям ввода и ссылкам, связанные с помощью aria-describedby ([ARIA1][aria1], [OAA44][oaa44]).
Обозначение обязательных полей с помощью aria-required или required ([ARIA2][aria2]).
Обозначение полей с ошибкой с помощью aria-invalid [ARIA21][aria21].

Следует обратить внимание на поля состоящие из нескольких элементов (например, радиокнопки, выбор даты — от и до, телефон — отдельно код и номер и т.д.): необходимо синтактически связать общую текстовую метку с каждым полем. Например, <fieldset> и <legend>, либо aria-labelledby="field-label-id subfield-label-id", либо aria-label="Дата от".



3.3.3. Подсказки при ошибках (Level AA)


При ошибках в заполнении формы, найденных на клиентской или серверной стороне, когда это уместно, нужно выводить в доступном виде подсказки и рекомендации по их исправлению.

3.3.4. Предотвращение ошибок (для юридических, финансовых и пользовательских данных) (Level AA)


Для ввода данных, которые имеют юридическую или финансовую значимость, для других контролируемых пользователем данных (определение дано в стандарте), выполняется хотя бы одно из требований:


Проверка. Данные, введенные пользователем, проверяются на наличие ошибок ввода, и пользователю предоставляется возможность исправить ошибки.
Подтверждение. Предоставлен механизм для подтверждения и исправления информации перед окончательной отправкой данных. Например, запрос подтверждения действия или предпросмотр введённых данных.
Обратимость (если возможно). Отправленные данные можно вернуть, например, в течение заданного промежутка времени.

4.1. Максимальная совместимость с существующими и будущими приложениями, включая ассистивные технологии


4.1.1. Синтаксис (Level A)


Отсутствуют существенные ошибки валидации HTML/XHTML (http://validator.w3.org/)


Максимальное соответствие спецификации используемой версии HTML не является обязательным, но рекомендуется (см. технику [G192][g192]).


Важные для доступности сайта моменты:


повторяющиеся идентификаторы (id) элементов ([ошибка 77][f77]),
ошибки использования открывающих и закрывающих тегов ([ошибка 70][f70]),
опечатки в именах тегов и атрибутов,
несоблюдение формата машиночитаемых данных (например, ошибки в URL, в значениях тега <time> и атрибута datetime).
другие ошибки, если они могут исказить восприятие сайта браузерами и экранными чтецами.


4.1.2. Заданы имена, роли, значения, состояния и взаимосвязи между элементами (Level A)


Разметка должна корректно восприниматься программами доступа.
Контролируемые браузером состояния (managed state) -фокус и выделение текста — должны быть заданы корректно в каждый момент времени. Это может быть либо встроенный механизм фокуса, либо один из описанных здесь: Providing Keyboard Focus.
Если элементы имеют роли, значения, названия, или между ними есть отношения, они должны быть выражены по возможности с помощью role, aria-* и других атрибутов.


Ниже неполный список случаев, когда уместна дополнительная семантическая разметка:


Предоставление текстовых меток к полям, ссылкам и управляющим элементам, подписей к изображениям ([ARIA6][aria6] — [ARIA10][aria10], [ARIA14][aria14] — [ARIA16][aria16]).
Разметка структуры страницы: семантических областей, заголовков ([ARIA11][aria11] — [ARIA13][aria13], [ARIA20][aria20]).
Группировка полей формы в role="group" — аналог <fieldset> ([ARIA17][aria17]).
Зачитываемые пользователям ошибки и уведомления ([ARIA18][aria18], [ARIA19][aria19]).
Отмена семантики элемента с помощью role="presentation" (например, чтобы используемая для вёрстки таблица не воспринималась как таблица с данными).
Разметка индикаторов загрузки role=progressbar ([OAA27][oaa27]).
Разметка открывающихся поверх страницы модальных окон с помощью role="dialog" ([OAA2][oaa2], WAI ARIA Authoring practices 3.3).
Разметка вкладок или аккордеона с помощью role="tablist". ([OAA34][oaa34], [OAA35][oaa35], [OAA36][oaa36], [OAA37][oaa37]).
Разметка собственной реализации комбинированного списка с помощью role="combobox". ([OAA9][oaa9], [OAA12][oaa12]).
Разметка поля ввода с автодополнением role="combobox" и aria-autocomplete="list" ([OAA11][oaa11], [OAA14][oaa14]).
Разметка ссылки, раскрывающей или скрывающей какой-либо блок на странице с помощью aria-expanded (w3c wiki).


Внимание! Пример на Open Ajax Accessibility содержит ошибку и противоречит примеру на w3c wiki и спецификации WAI-ARIA, не следует на него ссылаться или использовать. Атрибут aria-expanded должен быть не у раскрывающегося элемента, а у связанной кнопки или ссылки.


Разметка интерактивного меню со вложенными элементами ([OAA26][oaa26], [OAA27][oaa27], WAI ARIA Authoring practices 4.4).
Разметка слайдера (выбора значения в диапазоне) с помощью role="slider" ([OAA32][oaa32]).
Разметка деревьев с помощью role="tree" ([OAA41][oaa41], [OAA42][oaa42], [OAA43][oaa43]).
Скрытие элементов с помощью aria-hidden="true".