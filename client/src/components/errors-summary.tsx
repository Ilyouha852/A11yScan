import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { Badge } from "@/components/ui/badge";
import { 
  Lightbulb, 
  AlertCircle, 
  CheckCircle2, 
  TrendingUp,
  Image,
  Palette,
  Keyboard,
  List as ListIcon,
  FileText,
  Code2
} from "lucide-react";
import type { ViolationDetail, ExtendedChecks } from "@shared/schema";

interface ErrorsSummaryProps {
  violations: ViolationDetail[];
  htmlErrorCount: number;
  htmlWarningCount: number;
  extendedChecks?: ExtendedChecks;
}

interface CategoryAnalysis {
  name: string;
  icon: any;
  count: number;
  severity: 'critical' | 'high' | 'medium' | 'low';
  recommendations: string[];
}

function analyzeViolations(violations: ViolationDetail[]): CategoryAnalysis[] {
  const categories: Record<string, CategoryAnalysis> = {};
  
  const categoryConfig = {
    images: {
      name: "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç",
      icon: Image,
      keywords: ["image", "alt", "img"],
      recommendations: [
        "–î–æ–±–∞–≤—å—Ç–µ –∞—Ç—Ä–∏–±—É—Ç alt –∫–æ –≤—Å–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏—Ö —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è",
        "–î–ª—è –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—É—Å—Ç–æ–π alt=\"\" –∏–ª–∏ role=\"presentation\"",
        "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–µ–∫—Å—Ç –≤ alt –∫—Ä–∞—Ç–∫–æ –∏ —Ç–æ—á–Ω–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
      ]
    },
    contrast: {
      name: "–¶–≤–µ—Ç–æ–≤–æ–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç",
      icon: Palette,
      keywords: ["color", "contrast"],
      recommendations: [
        "–£–≤–µ–ª–∏—á—å—Ç–µ –∫–æ–Ω—Ç—Ä–∞—Å—Ç –º–µ–∂–¥—É —Ç–µ–∫—Å—Ç–æ–º –∏ —Ñ–æ–Ω–æ–º –¥–æ –º–∏–Ω–∏–º—É–º 4.5:1 –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞",
        "–î–ª—è –∫—Ä—É–ø–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ (18pt+ –∏–ª–∏ 14pt+ –∂–∏—Ä–Ω—ã–π) —Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–Ω—Ç—Ä–∞—Å—Ç –º–∏–Ω–∏–º—É–º 3:1",
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ü–≤–µ—Ç–æ–≤"
      ]
    },
    navigation: {
      name: "–ù–∞–≤–∏–≥–∞—Ü–∏—è –∏ —Ñ–æ–∫—É—Å",
      icon: Keyboard,
      keywords: ["focus", "tabindex", "bypass", "keyboard"],
      recommendations: [
        "–û–±–µ—Å–ø–µ—á—å—Ç–µ –≤–∏–¥–∏–º—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ñ–æ–∫—É—Å–∞ –¥–ª—è –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤",
        "–ò–∑–±–µ–≥–∞–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π tabindex",
        "–î–æ–±–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É '–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É' –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—è–¥–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"
      ]
    },
    semantics: {
      name: "–°–µ–º–∞–Ω—Ç–∏–∫–∞ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞",
      icon: ListIcon,
      keywords: ["heading", "landmark", "region", "list", "html-has-lang"],
      recommendations: [
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∏–µ—Ä–∞—Ä—Ö–∏—é –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (h1, h2, h3...)",
        "–î–æ–±–∞–≤—å—Ç–µ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã HTML5 (header, main, nav, footer)",
        "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–º–µ–µ—Ç –∞—Ç—Ä–∏–±—É—Ç lang –≤ —Ç–µ–≥–µ <html>",
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ø–∏—Å–∫–∏ (<ul>, <ol>) –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤"
      ]
    },
    forms: {
      name: "–§–æ—Ä–º—ã –∏ —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
      icon: FileText,
      keywords: ["label", "form", "input", "button-name", "select"],
      recommendations: [
        "–°–≤—è–∂–∏—Ç–µ –∫–∞–∂–¥–æ–µ –ø–æ–ª–µ —Ñ–æ—Ä–º—ã —Å –º–µ—Ç–∫–æ–π <label>",
        "–î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ aria-label –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫",
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ placeholder —Ç–æ–ª—å–∫–æ –∫–∞–∫ –ø–æ–¥—Å–∫–∞–∑–∫—É, –Ω–µ –∑–∞–º–µ–Ω—è–π—Ç–µ –∏–º –º–µ—Ç–∫—É",
        "–ì—Ä—É–ø–ø–∏—Ä—É–π—Ç–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –ø–æ–ª—è —Å –ø–æ–º–æ—â—å—é <fieldset> –∏ <legend>"
      ]
    },
    aria: {
      name: "ARIA –∞—Ç—Ä–∏–±—É—Ç—ã",
      icon: Code2,
      keywords: ["aria"],
      recommendations: [
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—Ç–∏–≤–Ω—ã–µ HTML —ç–ª–µ–º–µ–Ω—Ç—ã –≤–º–µ—Å—Ç–æ ARIA, –≥–¥–µ –≤–æ–∑–º–æ–∂–Ω–æ",
        "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ARIA –∞—Ç—Ä–∏–±—É—Ç—ã –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ ARIA –∞—Ç—Ä–∏–±—É—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç",
        "–ò–∑–±–µ–≥–∞–π—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –º–µ–∂–¥—É ARIA –∏ –Ω–∞—Ç–∏–≤–Ω–æ–π —Å–µ–º–∞–Ω—Ç–∏–∫–æ–π HTML"
      ]
    }
  };

  violations.forEach((violation) => {
    for (const [key, config] of Object.entries(categoryConfig)) {
      if (config.keywords.some(keyword => violation.id.includes(keyword))) {
        if (!categories[key]) {
          categories[key] = {
            name: config.name,
            icon: config.icon,
            count: 0,
            severity: 'low',
            recommendations: config.recommendations
          };
        }
        categories[key].count++;
        
        if (violation.impact === 'critical' || violation.impact === 'serious') {
          categories[key].severity = 'critical';
        } else if (violation.impact === 'moderate' && categories[key].severity !== 'critical') {
          categories[key].severity = 'high';
        }
        break;
      }
    }
  });

  return Object.values(categories).sort((a, b) => b.count - a.count);
}

function getOverallRecommendations(
  violations: ViolationDetail[], 
  htmlErrorCount: number,
  extendedChecks?: ExtendedChecks
): string[] {
  const recommendations: string[] = [];
  
  const criticalCount = violations.filter(v => v.impact === 'critical' || v.impact === 'serious').length;
  
  if (criticalCount > 0) {
    recommendations.push("üî¥ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1: –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏ —Å–µ—Ä—å—ë–∑–Ω—ã–µ –æ—à–∏–±–∫–∏ - –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤–ª–∏—è—é—Ç –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞");
  }
  
  if (htmlErrorCount > 0) {
    recommendations.push("üìù –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ HTML –≤–∞–ª–∏–¥–∞—Ü–∏–∏ - –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π HTML –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏ —á—Ç–µ–Ω–∏—è —Å —ç–∫—Ä–∞–Ω–∞");
  }
  
  if (extendedChecks?.viewport.blocksZoom) {
    recommendations.push("üîç –†–∞–∑—Ä–µ—à–∏—Ç–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã - —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º –∑—Ä–µ–Ω–∏–µ–º");
  }
  
  if (extendedChecks?.autoplayMedia.hasAutoplayAudio || extendedChecks?.autoplayMedia.hasAutoplayVideo) {
    recommendations.push("üîá –£–¥–∞–ª–∏—Ç–µ –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º–µ–¥–∏–∞ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è");
  }
  
  if (violations.length > 20) {
    recommendations.push("‚ö° –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏");
  }
  
  recommendations.push("‚úÖ –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≤–µ–¥–∏—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏ —á—Ç–µ–Ω–∏—è —Å —ç–∫—Ä–∞–Ω–∞ (NVDA, JAWS)");
  recommendations.push("üë• –ü—Ä–∏–≤–ª–µ–∫–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è");
  
  return recommendations;
}

export function ErrorsSummary({ violations, htmlErrorCount, htmlWarningCount, extendedChecks }: ErrorsSummaryProps) {
  if (violations.length === 0 && htmlErrorCount === 0) {
    return null;
  }

  const categoryAnalysis = analyzeViolations(violations);
  const overallRecommendations = getOverallRecommendations(violations, htmlErrorCount, extendedChecks);
  
  const totalIssues = violations.length + htmlErrorCount;
  const criticalIssues = violations.filter(v => v.impact === 'critical' || v.impact === 'serious').length;

  return (
    <div className="space-y-6 mb-8">
      <Card className="border-primary/20">
        <CardHeader>
          <div className="flex items-center gap-3">
            <div className="rounded-lg bg-primary/10 p-2">
              <Lightbulb className="h-6 w-6 text-primary" />
            </div>
            <div className="flex-1">
              <CardTitle className="text-xl">–û–±—â–∏–π –∞–Ω–∞–ª–∏–∑ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</CardTitle>
              <CardDescription>
                –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –∏ —Å–æ–≤–µ—Ç—ã –ø–æ –∏—Ö —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é
              </CardDescription>
            </div>
          </div>
        </CardHeader>
        <CardContent className="space-y-6">
          {/* Overall Status */}
          <Alert className={criticalIssues > 0 ? "border-destructive/50 bg-destructive/5" : "border-warning/50 bg-warning/5"}>
            <AlertCircle className={`h-4 w-4 ${criticalIssues > 0 ? "text-destructive" : "text-warning"}`} />
            <AlertDescription>
              <div className="flex items-center gap-2 flex-wrap">
                <span className="font-semibold">–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {totalIssues} –ø—Ä–æ–±–ª–µ–º:</span>
                {criticalIssues > 0 && (
                  <Badge variant="destructive" className="text-xs">
                    {criticalIssues} –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö
                  </Badge>
                )}
                {violations.length - criticalIssues > 0 && (
                  <Badge variant="secondary" className="text-xs">
                    {violations.length - criticalIssues} –¥—Ä—É–≥–∏—Ö –Ω–∞—Ä—É—à–µ–Ω–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
                  </Badge>
                )}
                {htmlErrorCount > 0 && (
                  <Badge variant="outline" className="text-xs">
                    {htmlErrorCount} –æ—à–∏–±–æ–∫ HTML
                  </Badge>
                )}
              </div>
            </AlertDescription>
          </Alert>

          {/* Category Breakdown */}
          {categoryAnalysis.length > 0 && (
            <div>
              <h3 className="text-sm font-semibold mb-3 flex items-center gap-2">
                <TrendingUp className="h-4 w-4" />
                –ü—Ä–æ–±–ª–µ–º—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
              </h3>
              <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3">
                {categoryAnalysis.map((category) => {
                  const Icon = category.icon;
                  return (
                    <div
                      key={category.name}
                      className="rounded-lg border p-3 bg-muted/30"
                      data-testid={`summary-category-${category.name}`}
                    >
                      <div className="flex items-center gap-2 mb-2">
                        <Icon className="h-4 w-4 text-muted-foreground" />
                        <span className="text-sm font-medium">{category.name}</span>
                      </div>
                      <div className="flex items-center justify-between">
                        <span className="text-2xl font-bold">{category.count}</span>
                        <Badge 
                          variant={category.severity === 'critical' ? 'destructive' : 'secondary'}
                          className="text-xs"
                        >
                          {category.severity === 'critical' ? '–í—ã—Å–æ–∫–∏–π' : '–°—Ä–µ–¥–Ω–∏–π'}
                        </Badge>
                      </div>
                    </div>
                  );
                })}
              </div>
            </div>
          )}

          {/* Detailed Recommendations by Category */}
          {categoryAnalysis.slice(0, 3).map((category) => (
            <div key={category.name} className="space-y-2">
              <h4 className="text-sm font-semibold flex items-center gap-2">
                <category.icon className="h-4 w-4" />
                {category.name} ({category.count} –ø—Ä–æ–±–ª–µ–º)
              </h4>
              <ul className="space-y-1 text-sm text-muted-foreground">
                {category.recommendations.map((rec, idx) => (
                  <li key={idx} className="flex items-start gap-2">
                    <span className="text-primary mt-0.5">‚Ä¢</span>
                    <span>{rec}</span>
                  </li>
                ))}
              </ul>
            </div>
          ))}

          {/* Overall Recommendations */}
          <div className="border-t pt-4">
            <h3 className="text-sm font-semibold mb-3 flex items-center gap-2">
              <CheckCircle2 className="h-4 w-4 text-success" />
              –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            </h3>
            <ul className="space-y-2 text-sm">
              {overallRecommendations.map((rec, idx) => (
                <li key={idx} className="flex items-start gap-2">
                  <span className="text-primary font-bold mt-0.5">‚Üí</span>
                  <span>{rec}</span>
                </li>
              ))}
            </ul>
          </div>

          {/* Resource Links */}
          <div className="bg-muted/50 rounded-lg p-4">
            <h4 className="text-sm font-semibold mb-2">üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã</h4>
            <ul className="text-sm space-y-1 text-muted-foreground">
              <li>‚Ä¢ <a href="https://www.w3.org/WAI/WCAG21/quickref/" target="_blank" rel="noopener noreferrer" className="text-primary hover:underline">–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ WCAG 2.1</a></li>
              <li>‚Ä¢ <a href="https://webaim.org/" target="_blank" rel="noopener noreferrer" className="text-primary hover:underline">WebAIM - —Ä–µ—Å—É—Ä—Å—ã –ø–æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏</a></li>
              <li>‚Ä¢ <a href="https://www.nvaccess.org/" target="_blank" rel="noopener noreferrer" className="text-primary hover:underline">NVDA - –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —á—Ç–µ–Ω–∏—è —Å —ç–∫—Ä–∞–Ω–∞</a></li>
            </ul>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
